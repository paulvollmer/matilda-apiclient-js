{"version":3,"sources":["webpack://MatildaClient/webpack/universalModuleDefinition","webpack://MatildaClient/webpack/bootstrap","webpack://MatildaClient/./src/index.js","webpack://MatildaClient/./node_modules/@babel/runtime/helpers/interopRequireDefault.js","webpack://MatildaClient/./node_modules/@babel/runtime/helpers/classCallCheck.js","webpack://MatildaClient/./node_modules/@babel/runtime/helpers/createClass.js","webpack://MatildaClient/./node_modules/whatwg-fetch/fetch.js"],"names":["root","factory","exports","module","define","amd","window","installedModules","__webpack_require__","moduleId","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","MatildaAPI","url","_classCallCheck2","this","apiBase","fetch","concat","word","lang","encodeURIComponent","source","target","join","obj","default","instance","Constructor","TypeError","_defineProperties","props","length","descriptor","configurable","writable","protoProps","staticProps","__webpack_exports__","Headers","Request","Response","DOMException","support","searchParams","self","iterable","blob","Blob","e","formData","arrayBuffer","viewClasses","isArrayBufferView","ArrayBuffer","isView","indexOf","toString","normalizeName","String","test","toLowerCase","normalizeValue","iteratorFor","items","iterator","next","shift","done","undefined","headers","map","forEach","append","Array","isArray","header","getOwnPropertyNames","consumed","body","bodyUsed","Promise","reject","fileReaderReady","reader","resolve","onload","result","onerror","error","readBlobAsArrayBuffer","FileReader","promise","readAsArrayBuffer","bufferClone","buf","slice","view","Uint8Array","byteLength","set","buffer","Body","_initBody","_bodyInit","_bodyText","isPrototypeOf","_bodyBlob","FormData","_bodyFormData","URLSearchParams","DataView","_bodyArrayBuffer","type","rejected","Error","then","text","readAsText","chars","fromCharCode","readArrayBufferAsText","decode","json","JSON","parse","oldValue","has","callback","thisArg","keys","push","values","entries","methods","input","options","method","upcased","credentials","signal","toUpperCase","referrer","form","trim","split","bytes","replace","decodeURIComponent","bodyInit","status","ok","statusText","clone","response","redirectStatuses","redirect","RangeError","location","err","message","stack","constructor","init","request","aborted","xhr","XMLHttpRequest","abortXhr","abort","rawHeaders","getAllResponseHeaders","line","parts","responseURL","responseText","ontimeout","onabort","open","withCredentials","responseType","setRequestHeader","addEventListener","onreadystatechange","readyState","removeEventListener","send","polyfill"],"mappings":"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","file":"main.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"MatildaClient\"] = factory();\n\telse\n\t\troot[\"MatildaClient\"] = factory();\n})(window, function() {\nreturn "," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 0);\n","import 'whatwg-fetch'\n\n/**\n * MatildaAPI client\n */\nclass MatildaAPI {\n  constructor(url) {\n    this.apiBase = url\n  }\n\n  /**\n   * Get a list of all supported languages\n   * @return {Promise}\n   */\n  getLanguages() {\n    return window.fetch(`${this.apiBase}/languages`)\n  }\n\n  /**\n   * Get a word\n   * @param {string} word The word to translate\n   * @param {string} lang The language of the word\n   * @return {Promise}\n   */\n  getWord(word, lang) {\n    return window.fetch(`${this.apiBase}/word/${encodeURIComponent(word)}?lang=${lang}`)\n  }\n\n  /**\n   * Get the dictionary of a word\n   * @param {string} word The word to translate\n   * @param {string} source The source language\n   * @param {Array} target The target language\n   * @return {Promise}\n   */\n  getDictionary(word, source, target) {\n    return window.fetch(\n      `${this.apiBase}/dictionary/${encodeURIComponent(word)}?source=${source}&target=${target.join(',')}`\n    )\n  }\n}\n\nexport default MatildaAPI\n","function _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    \"default\": obj\n  };\n}\n\nmodule.exports = _interopRequireDefault;","function _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nmodule.exports = _classCallCheck;","function _defineProperties(target, props) {\n  for (var i = 0; i < props.length; i++) {\n    var descriptor = props[i];\n    descriptor.enumerable = descriptor.enumerable || false;\n    descriptor.configurable = true;\n    if (\"value\" in descriptor) descriptor.writable = true;\n    Object.defineProperty(target, descriptor.key, descriptor);\n  }\n}\n\nfunction _createClass(Constructor, protoProps, staticProps) {\n  if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n  if (staticProps) _defineProperties(Constructor, staticProps);\n  return Constructor;\n}\n\nmodule.exports = _createClass;","var support = {\n  searchParams: 'URLSearchParams' in self,\n  iterable: 'Symbol' in self && 'iterator' in Symbol,\n  blob:\n    'FileReader' in self &&\n    'Blob' in self &&\n    (function() {\n      try {\n        new Blob()\n        return true\n      } catch (e) {\n        return false\n      }\n    })(),\n  formData: 'FormData' in self,\n  arrayBuffer: 'ArrayBuffer' in self\n}\n\nfunction isDataView(obj) {\n  return obj && DataView.prototype.isPrototypeOf(obj)\n}\n\nif (support.arrayBuffer) {\n  var viewClasses = [\n    '[object Int8Array]',\n    '[object Uint8Array]',\n    '[object Uint8ClampedArray]',\n    '[object Int16Array]',\n    '[object Uint16Array]',\n    '[object Int32Array]',\n    '[object Uint32Array]',\n    '[object Float32Array]',\n    '[object Float64Array]'\n  ]\n\n  var isArrayBufferView =\n    ArrayBuffer.isView ||\n    function(obj) {\n      return obj && viewClasses.indexOf(Object.prototype.toString.call(obj)) > -1\n    }\n}\n\nfunction normalizeName(name) {\n  if (typeof name !== 'string') {\n    name = String(name)\n  }\n  if (/[^a-z0-9\\-#$%&'*+.^_`|~]/i.test(name)) {\n    throw new TypeError('Invalid character in header field name')\n  }\n  return name.toLowerCase()\n}\n\nfunction normalizeValue(value) {\n  if (typeof value !== 'string') {\n    value = String(value)\n  }\n  return value\n}\n\n// Build a destructive iterator for the value list\nfunction iteratorFor(items) {\n  var iterator = {\n    next: function() {\n      var value = items.shift()\n      return {done: value === undefined, value: value}\n    }\n  }\n\n  if (support.iterable) {\n    iterator[Symbol.iterator] = function() {\n      return iterator\n    }\n  }\n\n  return iterator\n}\n\nexport function Headers(headers) {\n  this.map = {}\n\n  if (headers instanceof Headers) {\n    headers.forEach(function(value, name) {\n      this.append(name, value)\n    }, this)\n  } else if (Array.isArray(headers)) {\n    headers.forEach(function(header) {\n      this.append(header[0], header[1])\n    }, this)\n  } else if (headers) {\n    Object.getOwnPropertyNames(headers).forEach(function(name) {\n      this.append(name, headers[name])\n    }, this)\n  }\n}\n\nHeaders.prototype.append = function(name, value) {\n  name = normalizeName(name)\n  value = normalizeValue(value)\n  var oldValue = this.map[name]\n  this.map[name] = oldValue ? oldValue + ', ' + value : value\n}\n\nHeaders.prototype['delete'] = function(name) {\n  delete this.map[normalizeName(name)]\n}\n\nHeaders.prototype.get = function(name) {\n  name = normalizeName(name)\n  return this.has(name) ? this.map[name] : null\n}\n\nHeaders.prototype.has = function(name) {\n  return this.map.hasOwnProperty(normalizeName(name))\n}\n\nHeaders.prototype.set = function(name, value) {\n  this.map[normalizeName(name)] = normalizeValue(value)\n}\n\nHeaders.prototype.forEach = function(callback, thisArg) {\n  for (var name in this.map) {\n    if (this.map.hasOwnProperty(name)) {\n      callback.call(thisArg, this.map[name], name, this)\n    }\n  }\n}\n\nHeaders.prototype.keys = function() {\n  var items = []\n  this.forEach(function(value, name) {\n    items.push(name)\n  })\n  return iteratorFor(items)\n}\n\nHeaders.prototype.values = function() {\n  var items = []\n  this.forEach(function(value) {\n    items.push(value)\n  })\n  return iteratorFor(items)\n}\n\nHeaders.prototype.entries = function() {\n  var items = []\n  this.forEach(function(value, name) {\n    items.push([name, value])\n  })\n  return iteratorFor(items)\n}\n\nif (support.iterable) {\n  Headers.prototype[Symbol.iterator] = Headers.prototype.entries\n}\n\nfunction consumed(body) {\n  if (body.bodyUsed) {\n    return Promise.reject(new TypeError('Already read'))\n  }\n  body.bodyUsed = true\n}\n\nfunction fileReaderReady(reader) {\n  return new Promise(function(resolve, reject) {\n    reader.onload = function() {\n      resolve(reader.result)\n    }\n    reader.onerror = function() {\n      reject(reader.error)\n    }\n  })\n}\n\nfunction readBlobAsArrayBuffer(blob) {\n  var reader = new FileReader()\n  var promise = fileReaderReady(reader)\n  reader.readAsArrayBuffer(blob)\n  return promise\n}\n\nfunction readBlobAsText(blob) {\n  var reader = new FileReader()\n  var promise = fileReaderReady(reader)\n  reader.readAsText(blob)\n  return promise\n}\n\nfunction readArrayBufferAsText(buf) {\n  var view = new Uint8Array(buf)\n  var chars = new Array(view.length)\n\n  for (var i = 0; i < view.length; i++) {\n    chars[i] = String.fromCharCode(view[i])\n  }\n  return chars.join('')\n}\n\nfunction bufferClone(buf) {\n  if (buf.slice) {\n    return buf.slice(0)\n  } else {\n    var view = new Uint8Array(buf.byteLength)\n    view.set(new Uint8Array(buf))\n    return view.buffer\n  }\n}\n\nfunction Body() {\n  this.bodyUsed = false\n\n  this._initBody = function(body) {\n    this._bodyInit = body\n    if (!body) {\n      this._bodyText = ''\n    } else if (typeof body === 'string') {\n      this._bodyText = body\n    } else if (support.blob && Blob.prototype.isPrototypeOf(body)) {\n      this._bodyBlob = body\n    } else if (support.formData && FormData.prototype.isPrototypeOf(body)) {\n      this._bodyFormData = body\n    } else if (support.searchParams && URLSearchParams.prototype.isPrototypeOf(body)) {\n      this._bodyText = body.toString()\n    } else if (support.arrayBuffer && support.blob && isDataView(body)) {\n      this._bodyArrayBuffer = bufferClone(body.buffer)\n      // IE 10-11 can't handle a DataView body.\n      this._bodyInit = new Blob([this._bodyArrayBuffer])\n    } else if (support.arrayBuffer && (ArrayBuffer.prototype.isPrototypeOf(body) || isArrayBufferView(body))) {\n      this._bodyArrayBuffer = bufferClone(body)\n    } else {\n      this._bodyText = body = Object.prototype.toString.call(body)\n    }\n\n    if (!this.headers.get('content-type')) {\n      if (typeof body === 'string') {\n        this.headers.set('content-type', 'text/plain;charset=UTF-8')\n      } else if (this._bodyBlob && this._bodyBlob.type) {\n        this.headers.set('content-type', this._bodyBlob.type)\n      } else if (support.searchParams && URLSearchParams.prototype.isPrototypeOf(body)) {\n        this.headers.set('content-type', 'application/x-www-form-urlencoded;charset=UTF-8')\n      }\n    }\n  }\n\n  if (support.blob) {\n    this.blob = function() {\n      var rejected = consumed(this)\n      if (rejected) {\n        return rejected\n      }\n\n      if (this._bodyBlob) {\n        return Promise.resolve(this._bodyBlob)\n      } else if (this._bodyArrayBuffer) {\n        return Promise.resolve(new Blob([this._bodyArrayBuffer]))\n      } else if (this._bodyFormData) {\n        throw new Error('could not read FormData body as blob')\n      } else {\n        return Promise.resolve(new Blob([this._bodyText]))\n      }\n    }\n\n    this.arrayBuffer = function() {\n      if (this._bodyArrayBuffer) {\n        return consumed(this) || Promise.resolve(this._bodyArrayBuffer)\n      } else {\n        return this.blob().then(readBlobAsArrayBuffer)\n      }\n    }\n  }\n\n  this.text = function() {\n    var rejected = consumed(this)\n    if (rejected) {\n      return rejected\n    }\n\n    if (this._bodyBlob) {\n      return readBlobAsText(this._bodyBlob)\n    } else if (this._bodyArrayBuffer) {\n      return Promise.resolve(readArrayBufferAsText(this._bodyArrayBuffer))\n    } else if (this._bodyFormData) {\n      throw new Error('could not read FormData body as text')\n    } else {\n      return Promise.resolve(this._bodyText)\n    }\n  }\n\n  if (support.formData) {\n    this.formData = function() {\n      return this.text().then(decode)\n    }\n  }\n\n  this.json = function() {\n    return this.text().then(JSON.parse)\n  }\n\n  return this\n}\n\n// HTTP methods whose capitalization should be normalized\nvar methods = ['DELETE', 'GET', 'HEAD', 'OPTIONS', 'POST', 'PUT']\n\nfunction normalizeMethod(method) {\n  var upcased = method.toUpperCase()\n  return methods.indexOf(upcased) > -1 ? upcased : method\n}\n\nexport function Request(input, options) {\n  options = options || {}\n  var body = options.body\n\n  if (input instanceof Request) {\n    if (input.bodyUsed) {\n      throw new TypeError('Already read')\n    }\n    this.url = input.url\n    this.credentials = input.credentials\n    if (!options.headers) {\n      this.headers = new Headers(input.headers)\n    }\n    this.method = input.method\n    this.mode = input.mode\n    this.signal = input.signal\n    if (!body && input._bodyInit != null) {\n      body = input._bodyInit\n      input.bodyUsed = true\n    }\n  } else {\n    this.url = String(input)\n  }\n\n  this.credentials = options.credentials || this.credentials || 'same-origin'\n  if (options.headers || !this.headers) {\n    this.headers = new Headers(options.headers)\n  }\n  this.method = normalizeMethod(options.method || this.method || 'GET')\n  this.mode = options.mode || this.mode || null\n  this.signal = options.signal || this.signal\n  this.referrer = null\n\n  if ((this.method === 'GET' || this.method === 'HEAD') && body) {\n    throw new TypeError('Body not allowed for GET or HEAD requests')\n  }\n  this._initBody(body)\n}\n\nRequest.prototype.clone = function() {\n  return new Request(this, {body: this._bodyInit})\n}\n\nfunction decode(body) {\n  var form = new FormData()\n  body\n    .trim()\n    .split('&')\n    .forEach(function(bytes) {\n      if (bytes) {\n        var split = bytes.split('=')\n        var name = split.shift().replace(/\\+/g, ' ')\n        var value = split.join('=').replace(/\\+/g, ' ')\n        form.append(decodeURIComponent(name), decodeURIComponent(value))\n      }\n    })\n  return form\n}\n\nfunction parseHeaders(rawHeaders) {\n  var headers = new Headers()\n  // Replace instances of \\r\\n and \\n followed by at least one space or horizontal tab with a space\n  // https://tools.ietf.org/html/rfc7230#section-3.2\n  var preProcessedHeaders = rawHeaders.replace(/\\r?\\n[\\t ]+/g, ' ')\n  preProcessedHeaders.split(/\\r?\\n/).forEach(function(line) {\n    var parts = line.split(':')\n    var key = parts.shift().trim()\n    if (key) {\n      var value = parts.join(':').trim()\n      headers.append(key, value)\n    }\n  })\n  return headers\n}\n\nBody.call(Request.prototype)\n\nexport function Response(bodyInit, options) {\n  if (!options) {\n    options = {}\n  }\n\n  this.type = 'default'\n  this.status = options.status === undefined ? 200 : options.status\n  this.ok = this.status >= 200 && this.status < 300\n  this.statusText = 'statusText' in options ? options.statusText : 'OK'\n  this.headers = new Headers(options.headers)\n  this.url = options.url || ''\n  this._initBody(bodyInit)\n}\n\nBody.call(Response.prototype)\n\nResponse.prototype.clone = function() {\n  return new Response(this._bodyInit, {\n    status: this.status,\n    statusText: this.statusText,\n    headers: new Headers(this.headers),\n    url: this.url\n  })\n}\n\nResponse.error = function() {\n  var response = new Response(null, {status: 0, statusText: ''})\n  response.type = 'error'\n  return response\n}\n\nvar redirectStatuses = [301, 302, 303, 307, 308]\n\nResponse.redirect = function(url, status) {\n  if (redirectStatuses.indexOf(status) === -1) {\n    throw new RangeError('Invalid status code')\n  }\n\n  return new Response(null, {status: status, headers: {location: url}})\n}\n\nexport var DOMException = self.DOMException\ntry {\n  new DOMException()\n} catch (err) {\n  DOMException = function(message, name) {\n    this.message = message\n    this.name = name\n    var error = Error(message)\n    this.stack = error.stack\n  }\n  DOMException.prototype = Object.create(Error.prototype)\n  DOMException.prototype.constructor = DOMException\n}\n\nexport function fetch(input, init) {\n  return new Promise(function(resolve, reject) {\n    var request = new Request(input, init)\n\n    if (request.signal && request.signal.aborted) {\n      return reject(new DOMException('Aborted', 'AbortError'))\n    }\n\n    var xhr = new XMLHttpRequest()\n\n    function abortXhr() {\n      xhr.abort()\n    }\n\n    xhr.onload = function() {\n      var options = {\n        status: xhr.status,\n        statusText: xhr.statusText,\n        headers: parseHeaders(xhr.getAllResponseHeaders() || '')\n      }\n      options.url = 'responseURL' in xhr ? xhr.responseURL : options.headers.get('X-Request-URL')\n      var body = 'response' in xhr ? xhr.response : xhr.responseText\n      resolve(new Response(body, options))\n    }\n\n    xhr.onerror = function() {\n      reject(new TypeError('Network request failed'))\n    }\n\n    xhr.ontimeout = function() {\n      reject(new TypeError('Network request failed'))\n    }\n\n    xhr.onabort = function() {\n      reject(new DOMException('Aborted', 'AbortError'))\n    }\n\n    xhr.open(request.method, request.url, true)\n\n    if (request.credentials === 'include') {\n      xhr.withCredentials = true\n    } else if (request.credentials === 'omit') {\n      xhr.withCredentials = false\n    }\n\n    if ('responseType' in xhr && support.blob) {\n      xhr.responseType = 'blob'\n    }\n\n    request.headers.forEach(function(value, name) {\n      xhr.setRequestHeader(name, value)\n    })\n\n    if (request.signal) {\n      request.signal.addEventListener('abort', abortXhr)\n\n      xhr.onreadystatechange = function() {\n        // DONE (success or failure)\n        if (xhr.readyState === 4) {\n          request.signal.removeEventListener('abort', abortXhr)\n        }\n      }\n    }\n\n    xhr.send(typeof request._bodyInit === 'undefined' ? null : request._bodyInit)\n  })\n}\n\nfetch.polyfill = true\n\nif (!self.fetch) {\n  self.fetch = fetch\n  self.Headers = Headers\n  self.Request = Request\n  self.Response = Response\n}\n"],"sourceRoot":""}