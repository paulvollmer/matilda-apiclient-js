{"version":3,"sources":["webpack://MatildaClient/webpack/universalModuleDefinition","webpack://MatildaClient/webpack/bootstrap","webpack://MatildaClient/./src/index.js","webpack://MatildaClient/./node_modules/@babel/runtime/helpers/interopRequireDefault.js","webpack://MatildaClient/./node_modules/@babel/runtime/helpers/classCallCheck.js","webpack://MatildaClient/./node_modules/@babel/runtime/helpers/createClass.js","webpack://MatildaClient/./node_modules/query-string/index.js","webpack://MatildaClient/./node_modules/strict-uri-encode/index.js","webpack://MatildaClient/./node_modules/decode-uri-component/index.js","webpack://MatildaClient/./node_modules/split-on-first/index.js","webpack://MatildaClient/./node_modules/whatwg-fetch/fetch.js"],"names":["root","factory","exports","module","define","amd","window","installedModules","__webpack_require__","moduleId","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","_queryString","_interopRequireDefault","MatildaAPI","url","_classCallCheck2","this","apiBase","fetch","concat","word","lang","query","queryString","stringify","encodeURIComponent","source","target","obj","default","instance","Constructor","TypeError","_defineProperties","props","length","descriptor","configurable","writable","protoProps","staticProps","strictUriEncode","decodeComponent","splitOnFirst","encode","options","strict","decode","removeHash","input","hashStart","indexOf","slice","extract","queryStart","parse","formatter","result","arrayFormat","accumulator","exec","replace","undefined","newValue","split","parserForArrayFormat","assign","sort","parseNumbers","parseBooleans","ret","trim","param","Number","isNaN","toLowerCase","keys","reduce","Boolean","Array","isArray","keysSorter","a","b","map","index","join","encoderForArrayFormat","filter","x","parseUrl","str","charCodeAt","toString","toUpperCase","singleMatcher","RegExp","multiMatcher","decodeComponents","components","decodeURIComponent","err","left","right","tokens","match","encodedURI","replaceMap","%FE%FF","%FF%FE","entries","customDecodeURIComponent","string","separator","separatorIndex","__webpack_exports__","Headers","Request","Response","DOMException","support","searchParams","self","iterable","blob","Blob","e","formData","arrayBuffer","viewClasses","isArrayBufferView","ArrayBuffer","isView","normalizeName","String","test","normalizeValue","iteratorFor","items","iterator","next","shift","done","headers","forEach","append","header","getOwnPropertyNames","consumed","body","bodyUsed","Promise","reject","fileReaderReady","reader","resolve","onload","onerror","error","readBlobAsArrayBuffer","FileReader","promise","readAsArrayBuffer","bufferClone","buf","view","Uint8Array","byteLength","set","buffer","Body","_initBody","_bodyInit","_bodyText","isPrototypeOf","_bodyBlob","FormData","_bodyFormData","URLSearchParams","DataView","_bodyArrayBuffer","type","rejected","Error","then","text","readAsText","chars","fromCharCode","readArrayBufferAsText","json","JSON","oldValue","has","callback","thisArg","push","values","methods","method","upcased","credentials","signal","referrer","form","bytes","bodyInit","status","ok","statusText","clone","response","redirectStatuses","redirect","RangeError","location","message","stack","constructor","init","request","aborted","xhr","XMLHttpRequest","abortXhr","abort","rawHeaders","getAllResponseHeaders","line","parts","responseURL","responseText","ontimeout","onabort","open","withCredentials","responseType","setRequestHeader","addEventListener","onreadystatechange","readyState","removeEventListener","send","polyfill"],"mappings":"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","file":"main.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"MatildaClient\"] = factory();\n\telse\n\t\troot[\"MatildaClient\"] = factory();\n})(window, function() {\nreturn "," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 0);\n","import queryString from 'query-string'\nimport 'whatwg-fetch'\n\nclass MatildaAPI {\n  constructor(url) {\n    this.apiBase = url\n  }\n\n  /**\n   * Get a list of all supported languages\n   * @return {Promise}\n   */\n  getLanguages() {\n    return window.fetch(`${this.apiBase}/languages`)\n  }\n\n  /**\n   * Get a word\n   * @param {string} word The word to translate\n   * @param {string} lang The language of the word\n   * @return {Promise}\n   */\n  getWord(word, lang) {\n    const query = queryString.stringify({ lang })\n    return window.fetch(`${this.apiBase}/word/${encodeURIComponent(word)}?${query}`)\n  }\n\n  /**\n   * Get the dictionary of a word\n   * @param {string} word The word to translate\n   * @param {string} source The source language\n   * @param {Array} target The target language\n   * @return {Promise}\n   */\n  getDictionary(word, source, target) {\n    const query = queryString.stringify({ source, target })\n    return window.fetch(`${this.apiBase}/dictionary/${encodeURIComponent(word)}?${query}`)\n  }\n}\n\nexport default MatildaAPI\n","function _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    \"default\": obj\n  };\n}\n\nmodule.exports = _interopRequireDefault;","function _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nmodule.exports = _classCallCheck;","function _defineProperties(target, props) {\n  for (var i = 0; i < props.length; i++) {\n    var descriptor = props[i];\n    descriptor.enumerable = descriptor.enumerable || false;\n    descriptor.configurable = true;\n    if (\"value\" in descriptor) descriptor.writable = true;\n    Object.defineProperty(target, descriptor.key, descriptor);\n  }\n}\n\nfunction _createClass(Constructor, protoProps, staticProps) {\n  if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n  if (staticProps) _defineProperties(Constructor, staticProps);\n  return Constructor;\n}\n\nmodule.exports = _createClass;","'use strict';\nconst strictUriEncode = require('strict-uri-encode');\nconst decodeComponent = require('decode-uri-component');\nconst splitOnFirst = require('split-on-first');\n\nfunction encoderForArrayFormat(options) {\n\tswitch (options.arrayFormat) {\n\t\tcase 'index':\n\t\t\treturn key => (result, value) => {\n\t\t\t\tconst index = result.length;\n\t\t\t\tif (value === undefined) {\n\t\t\t\t\treturn result;\n\t\t\t\t}\n\n\t\t\t\tif (value === null) {\n\t\t\t\t\treturn [...result, [encode(key, options), '[', index, ']'].join('')];\n\t\t\t\t}\n\n\t\t\t\treturn [\n\t\t\t\t\t...result,\n\t\t\t\t\t[encode(key, options), '[', encode(index, options), ']=', encode(value, options)].join('')\n\t\t\t\t];\n\t\t\t};\n\n\t\tcase 'bracket':\n\t\t\treturn key => (result, value) => {\n\t\t\t\tif (value === undefined) {\n\t\t\t\t\treturn result;\n\t\t\t\t}\n\n\t\t\t\tif (value === null) {\n\t\t\t\t\treturn [...result, [encode(key, options), '[]'].join('')];\n\t\t\t\t}\n\n\t\t\t\treturn [...result, [encode(key, options), '[]=', encode(value, options)].join('')];\n\t\t\t};\n\n\t\tcase 'comma':\n\t\t\treturn key => (result, value, index) => {\n\t\t\t\tif (value === null || value === undefined || value.length === 0) {\n\t\t\t\t\treturn result;\n\t\t\t\t}\n\n\t\t\t\tif (index === 0) {\n\t\t\t\t\treturn [[encode(key, options), '=', encode(value, options)].join('')];\n\t\t\t\t}\n\n\t\t\t\treturn [[result, encode(value, options)].join(',')];\n\t\t\t};\n\n\t\tdefault:\n\t\t\treturn key => (result, value) => {\n\t\t\t\tif (value === undefined) {\n\t\t\t\t\treturn result;\n\t\t\t\t}\n\n\t\t\t\tif (value === null) {\n\t\t\t\t\treturn [...result, encode(key, options)];\n\t\t\t\t}\n\n\t\t\t\treturn [...result, [encode(key, options), '=', encode(value, options)].join('')];\n\t\t\t};\n\t}\n}\n\nfunction parserForArrayFormat(options) {\n\tlet result;\n\n\tswitch (options.arrayFormat) {\n\t\tcase 'index':\n\t\t\treturn (key, value, accumulator) => {\n\t\t\t\tresult = /\\[(\\d*)\\]$/.exec(key);\n\n\t\t\t\tkey = key.replace(/\\[\\d*\\]$/, '');\n\n\t\t\t\tif (!result) {\n\t\t\t\t\taccumulator[key] = value;\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tif (accumulator[key] === undefined) {\n\t\t\t\t\taccumulator[key] = {};\n\t\t\t\t}\n\n\t\t\t\taccumulator[key][result[1]] = value;\n\t\t\t};\n\n\t\tcase 'bracket':\n\t\t\treturn (key, value, accumulator) => {\n\t\t\t\tresult = /(\\[\\])$/.exec(key);\n\t\t\t\tkey = key.replace(/\\[\\]$/, '');\n\n\t\t\t\tif (!result) {\n\t\t\t\t\taccumulator[key] = value;\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tif (accumulator[key] === undefined) {\n\t\t\t\t\taccumulator[key] = [value];\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\taccumulator[key] = [].concat(accumulator[key], value);\n\t\t\t};\n\n\t\tcase 'comma':\n\t\t\treturn (key, value, accumulator) => {\n\t\t\t\tconst isArray = typeof value === 'string' && value.split('').indexOf(',') > -1;\n\t\t\t\tconst newValue = isArray ? value.split(',') : value;\n\t\t\t\taccumulator[key] = newValue;\n\t\t\t};\n\n\t\tdefault:\n\t\t\treturn (key, value, accumulator) => {\n\t\t\t\tif (accumulator[key] === undefined) {\n\t\t\t\t\taccumulator[key] = value;\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\taccumulator[key] = [].concat(accumulator[key], value);\n\t\t\t};\n\t}\n}\n\nfunction encode(value, options) {\n\tif (options.encode) {\n\t\treturn options.strict ? strictUriEncode(value) : encodeURIComponent(value);\n\t}\n\n\treturn value;\n}\n\nfunction decode(value, options) {\n\tif (options.decode) {\n\t\treturn decodeComponent(value);\n\t}\n\n\treturn value;\n}\n\nfunction keysSorter(input) {\n\tif (Array.isArray(input)) {\n\t\treturn input.sort();\n\t}\n\n\tif (typeof input === 'object') {\n\t\treturn keysSorter(Object.keys(input))\n\t\t\t.sort((a, b) => Number(a) - Number(b))\n\t\t\t.map(key => input[key]);\n\t}\n\n\treturn input;\n}\n\nfunction removeHash(input) {\n\tconst hashStart = input.indexOf('#');\n\tif (hashStart !== -1) {\n\t\tinput = input.slice(0, hashStart);\n\t}\n\n\treturn input;\n}\n\nfunction extract(input) {\n\tinput = removeHash(input);\n\tconst queryStart = input.indexOf('?');\n\tif (queryStart === -1) {\n\t\treturn '';\n\t}\n\n\treturn input.slice(queryStart + 1);\n}\n\nfunction parse(input, options) {\n\toptions = Object.assign({\n\t\tdecode: true,\n\t\tsort: true,\n\t\tarrayFormat: 'none',\n\t\tparseNumbers: false,\n\t\tparseBooleans: false\n\t}, options);\n\n\tconst formatter = parserForArrayFormat(options);\n\n\t// Create an object with no prototype\n\tconst ret = Object.create(null);\n\n\tif (typeof input !== 'string') {\n\t\treturn ret;\n\t}\n\n\tinput = input.trim().replace(/^[?#&]/, '');\n\n\tif (!input) {\n\t\treturn ret;\n\t}\n\n\tfor (const param of input.split('&')) {\n\t\tlet [key, value] = splitOnFirst(param.replace(/\\+/g, ' '), '=');\n\n\t\t// Missing `=` should be `null`:\n\t\t// http://w3.org/TR/2012/WD-url-20120524/#collect-url-parameters\n\t\tvalue = value === undefined ? null : decode(value, options);\n\n\t\tif (options.parseNumbers && !Number.isNaN(Number(value))) {\n\t\t\tvalue = Number(value);\n\t\t} else if (options.parseBooleans && value !== null && (value.toLowerCase() === 'true' || value.toLowerCase() === 'false')) {\n\t\t\tvalue = value.toLowerCase() === 'true';\n\t\t}\n\n\t\tformatter(decode(key, options), value, ret);\n\t}\n\n\tif (options.sort === false) {\n\t\treturn ret;\n\t}\n\n\treturn (options.sort === true ? Object.keys(ret).sort() : Object.keys(ret).sort(options.sort)).reduce((result, key) => {\n\t\tconst value = ret[key];\n\t\tif (Boolean(value) && typeof value === 'object' && !Array.isArray(value)) {\n\t\t\t// Sort object keys, not values\n\t\t\tresult[key] = keysSorter(value);\n\t\t} else {\n\t\t\tresult[key] = value;\n\t\t}\n\n\t\treturn result;\n\t}, Object.create(null));\n}\n\nexports.extract = extract;\nexports.parse = parse;\n\nexports.stringify = (object, options) => {\n\tif (!object) {\n\t\treturn '';\n\t}\n\n\toptions = Object.assign({\n\t\tencode: true,\n\t\tstrict: true,\n\t\tarrayFormat: 'none'\n\t}, options);\n\n\tconst formatter = encoderForArrayFormat(options);\n\tconst keys = Object.keys(object);\n\n\tif (options.sort !== false) {\n\t\tkeys.sort(options.sort);\n\t}\n\n\treturn keys.map(key => {\n\t\tconst value = object[key];\n\n\t\tif (value === undefined) {\n\t\t\treturn '';\n\t\t}\n\n\t\tif (value === null) {\n\t\t\treturn encode(key, options);\n\t\t}\n\n\t\tif (Array.isArray(value)) {\n\t\t\treturn value\n\t\t\t\t.reduce(formatter(key), [])\n\t\t\t\t.join('&');\n\t\t}\n\n\t\treturn encode(key, options) + '=' + encode(value, options);\n\t}).filter(x => x.length > 0).join('&');\n};\n\nexports.parseUrl = (input, options) => {\n\treturn {\n\t\turl: removeHash(input).split('?')[0] || '',\n\t\tquery: parse(extract(input), options)\n\t};\n};\n","'use strict';\nmodule.exports = str => encodeURIComponent(str).replace(/[!'()*]/g, x => `%${x.charCodeAt(0).toString(16).toUpperCase()}`);\n","'use strict';\nvar token = '%[a-f0-9]{2}';\nvar singleMatcher = new RegExp(token, 'gi');\nvar multiMatcher = new RegExp('(' + token + ')+', 'gi');\n\nfunction decodeComponents(components, split) {\n\ttry {\n\t\t// Try to decode the entire string first\n\t\treturn decodeURIComponent(components.join(''));\n\t} catch (err) {\n\t\t// Do nothing\n\t}\n\n\tif (components.length === 1) {\n\t\treturn components;\n\t}\n\n\tsplit = split || 1;\n\n\t// Split the array in 2 parts\n\tvar left = components.slice(0, split);\n\tvar right = components.slice(split);\n\n\treturn Array.prototype.concat.call([], decodeComponents(left), decodeComponents(right));\n}\n\nfunction decode(input) {\n\ttry {\n\t\treturn decodeURIComponent(input);\n\t} catch (err) {\n\t\tvar tokens = input.match(singleMatcher);\n\n\t\tfor (var i = 1; i < tokens.length; i++) {\n\t\t\tinput = decodeComponents(tokens, i).join('');\n\n\t\t\ttokens = input.match(singleMatcher);\n\t\t}\n\n\t\treturn input;\n\t}\n}\n\nfunction customDecodeURIComponent(input) {\n\t// Keep track of all the replacements and prefill the map with the `BOM`\n\tvar replaceMap = {\n\t\t'%FE%FF': '\\uFFFD\\uFFFD',\n\t\t'%FF%FE': '\\uFFFD\\uFFFD'\n\t};\n\n\tvar match = multiMatcher.exec(input);\n\twhile (match) {\n\t\ttry {\n\t\t\t// Decode as big chunks as possible\n\t\t\treplaceMap[match[0]] = decodeURIComponent(match[0]);\n\t\t} catch (err) {\n\t\t\tvar result = decode(match[0]);\n\n\t\t\tif (result !== match[0]) {\n\t\t\t\treplaceMap[match[0]] = result;\n\t\t\t}\n\t\t}\n\n\t\tmatch = multiMatcher.exec(input);\n\t}\n\n\t// Add `%C2` at the end of the map to make sure it does not replace the combinator before everything else\n\treplaceMap['%C2'] = '\\uFFFD';\n\n\tvar entries = Object.keys(replaceMap);\n\n\tfor (var i = 0; i < entries.length; i++) {\n\t\t// Replace all decoded components\n\t\tvar key = entries[i];\n\t\tinput = input.replace(new RegExp(key, 'g'), replaceMap[key]);\n\t}\n\n\treturn input;\n}\n\nmodule.exports = function (encodedURI) {\n\tif (typeof encodedURI !== 'string') {\n\t\tthrow new TypeError('Expected `encodedURI` to be of type `string`, got `' + typeof encodedURI + '`');\n\t}\n\n\ttry {\n\t\tencodedURI = encodedURI.replace(/\\+/g, ' ');\n\n\t\t// Try the built in decoder first\n\t\treturn decodeURIComponent(encodedURI);\n\t} catch (err) {\n\t\t// Fallback to a more advanced decoder\n\t\treturn customDecodeURIComponent(encodedURI);\n\t}\n};\n","'use strict';\n\nmodule.exports = (string, separator) => {\n\tif (!(typeof string === 'string' && typeof separator === 'string')) {\n\t\tthrow new TypeError('Expected the arguments to be of type `string`');\n\t}\n\n\tif (separator === '') {\n\t\treturn [string];\n\t}\n\n\tconst separatorIndex = string.indexOf(separator);\n\n\tif (separatorIndex === -1) {\n\t\treturn [string];\n\t}\n\n\treturn [\n\t\tstring.slice(0, separatorIndex),\n\t\tstring.slice(separatorIndex + separator.length)\n\t];\n};\n","var support = {\n  searchParams: 'URLSearchParams' in self,\n  iterable: 'Symbol' in self && 'iterator' in Symbol,\n  blob:\n    'FileReader' in self &&\n    'Blob' in self &&\n    (function() {\n      try {\n        new Blob()\n        return true\n      } catch (e) {\n        return false\n      }\n    })(),\n  formData: 'FormData' in self,\n  arrayBuffer: 'ArrayBuffer' in self\n}\n\nfunction isDataView(obj) {\n  return obj && DataView.prototype.isPrototypeOf(obj)\n}\n\nif (support.arrayBuffer) {\n  var viewClasses = [\n    '[object Int8Array]',\n    '[object Uint8Array]',\n    '[object Uint8ClampedArray]',\n    '[object Int16Array]',\n    '[object Uint16Array]',\n    '[object Int32Array]',\n    '[object Uint32Array]',\n    '[object Float32Array]',\n    '[object Float64Array]'\n  ]\n\n  var isArrayBufferView =\n    ArrayBuffer.isView ||\n    function(obj) {\n      return obj && viewClasses.indexOf(Object.prototype.toString.call(obj)) > -1\n    }\n}\n\nfunction normalizeName(name) {\n  if (typeof name !== 'string') {\n    name = String(name)\n  }\n  if (/[^a-z0-9\\-#$%&'*+.^_`|~]/i.test(name)) {\n    throw new TypeError('Invalid character in header field name')\n  }\n  return name.toLowerCase()\n}\n\nfunction normalizeValue(value) {\n  if (typeof value !== 'string') {\n    value = String(value)\n  }\n  return value\n}\n\n// Build a destructive iterator for the value list\nfunction iteratorFor(items) {\n  var iterator = {\n    next: function() {\n      var value = items.shift()\n      return {done: value === undefined, value: value}\n    }\n  }\n\n  if (support.iterable) {\n    iterator[Symbol.iterator] = function() {\n      return iterator\n    }\n  }\n\n  return iterator\n}\n\nexport function Headers(headers) {\n  this.map = {}\n\n  if (headers instanceof Headers) {\n    headers.forEach(function(value, name) {\n      this.append(name, value)\n    }, this)\n  } else if (Array.isArray(headers)) {\n    headers.forEach(function(header) {\n      this.append(header[0], header[1])\n    }, this)\n  } else if (headers) {\n    Object.getOwnPropertyNames(headers).forEach(function(name) {\n      this.append(name, headers[name])\n    }, this)\n  }\n}\n\nHeaders.prototype.append = function(name, value) {\n  name = normalizeName(name)\n  value = normalizeValue(value)\n  var oldValue = this.map[name]\n  this.map[name] = oldValue ? oldValue + ', ' + value : value\n}\n\nHeaders.prototype['delete'] = function(name) {\n  delete this.map[normalizeName(name)]\n}\n\nHeaders.prototype.get = function(name) {\n  name = normalizeName(name)\n  return this.has(name) ? this.map[name] : null\n}\n\nHeaders.prototype.has = function(name) {\n  return this.map.hasOwnProperty(normalizeName(name))\n}\n\nHeaders.prototype.set = function(name, value) {\n  this.map[normalizeName(name)] = normalizeValue(value)\n}\n\nHeaders.prototype.forEach = function(callback, thisArg) {\n  for (var name in this.map) {\n    if (this.map.hasOwnProperty(name)) {\n      callback.call(thisArg, this.map[name], name, this)\n    }\n  }\n}\n\nHeaders.prototype.keys = function() {\n  var items = []\n  this.forEach(function(value, name) {\n    items.push(name)\n  })\n  return iteratorFor(items)\n}\n\nHeaders.prototype.values = function() {\n  var items = []\n  this.forEach(function(value) {\n    items.push(value)\n  })\n  return iteratorFor(items)\n}\n\nHeaders.prototype.entries = function() {\n  var items = []\n  this.forEach(function(value, name) {\n    items.push([name, value])\n  })\n  return iteratorFor(items)\n}\n\nif (support.iterable) {\n  Headers.prototype[Symbol.iterator] = Headers.prototype.entries\n}\n\nfunction consumed(body) {\n  if (body.bodyUsed) {\n    return Promise.reject(new TypeError('Already read'))\n  }\n  body.bodyUsed = true\n}\n\nfunction fileReaderReady(reader) {\n  return new Promise(function(resolve, reject) {\n    reader.onload = function() {\n      resolve(reader.result)\n    }\n    reader.onerror = function() {\n      reject(reader.error)\n    }\n  })\n}\n\nfunction readBlobAsArrayBuffer(blob) {\n  var reader = new FileReader()\n  var promise = fileReaderReady(reader)\n  reader.readAsArrayBuffer(blob)\n  return promise\n}\n\nfunction readBlobAsText(blob) {\n  var reader = new FileReader()\n  var promise = fileReaderReady(reader)\n  reader.readAsText(blob)\n  return promise\n}\n\nfunction readArrayBufferAsText(buf) {\n  var view = new Uint8Array(buf)\n  var chars = new Array(view.length)\n\n  for (var i = 0; i < view.length; i++) {\n    chars[i] = String.fromCharCode(view[i])\n  }\n  return chars.join('')\n}\n\nfunction bufferClone(buf) {\n  if (buf.slice) {\n    return buf.slice(0)\n  } else {\n    var view = new Uint8Array(buf.byteLength)\n    view.set(new Uint8Array(buf))\n    return view.buffer\n  }\n}\n\nfunction Body() {\n  this.bodyUsed = false\n\n  this._initBody = function(body) {\n    this._bodyInit = body\n    if (!body) {\n      this._bodyText = ''\n    } else if (typeof body === 'string') {\n      this._bodyText = body\n    } else if (support.blob && Blob.prototype.isPrototypeOf(body)) {\n      this._bodyBlob = body\n    } else if (support.formData && FormData.prototype.isPrototypeOf(body)) {\n      this._bodyFormData = body\n    } else if (support.searchParams && URLSearchParams.prototype.isPrototypeOf(body)) {\n      this._bodyText = body.toString()\n    } else if (support.arrayBuffer && support.blob && isDataView(body)) {\n      this._bodyArrayBuffer = bufferClone(body.buffer)\n      // IE 10-11 can't handle a DataView body.\n      this._bodyInit = new Blob([this._bodyArrayBuffer])\n    } else if (support.arrayBuffer && (ArrayBuffer.prototype.isPrototypeOf(body) || isArrayBufferView(body))) {\n      this._bodyArrayBuffer = bufferClone(body)\n    } else {\n      this._bodyText = body = Object.prototype.toString.call(body)\n    }\n\n    if (!this.headers.get('content-type')) {\n      if (typeof body === 'string') {\n        this.headers.set('content-type', 'text/plain;charset=UTF-8')\n      } else if (this._bodyBlob && this._bodyBlob.type) {\n        this.headers.set('content-type', this._bodyBlob.type)\n      } else if (support.searchParams && URLSearchParams.prototype.isPrototypeOf(body)) {\n        this.headers.set('content-type', 'application/x-www-form-urlencoded;charset=UTF-8')\n      }\n    }\n  }\n\n  if (support.blob) {\n    this.blob = function() {\n      var rejected = consumed(this)\n      if (rejected) {\n        return rejected\n      }\n\n      if (this._bodyBlob) {\n        return Promise.resolve(this._bodyBlob)\n      } else if (this._bodyArrayBuffer) {\n        return Promise.resolve(new Blob([this._bodyArrayBuffer]))\n      } else if (this._bodyFormData) {\n        throw new Error('could not read FormData body as blob')\n      } else {\n        return Promise.resolve(new Blob([this._bodyText]))\n      }\n    }\n\n    this.arrayBuffer = function() {\n      if (this._bodyArrayBuffer) {\n        return consumed(this) || Promise.resolve(this._bodyArrayBuffer)\n      } else {\n        return this.blob().then(readBlobAsArrayBuffer)\n      }\n    }\n  }\n\n  this.text = function() {\n    var rejected = consumed(this)\n    if (rejected) {\n      return rejected\n    }\n\n    if (this._bodyBlob) {\n      return readBlobAsText(this._bodyBlob)\n    } else if (this._bodyArrayBuffer) {\n      return Promise.resolve(readArrayBufferAsText(this._bodyArrayBuffer))\n    } else if (this._bodyFormData) {\n      throw new Error('could not read FormData body as text')\n    } else {\n      return Promise.resolve(this._bodyText)\n    }\n  }\n\n  if (support.formData) {\n    this.formData = function() {\n      return this.text().then(decode)\n    }\n  }\n\n  this.json = function() {\n    return this.text().then(JSON.parse)\n  }\n\n  return this\n}\n\n// HTTP methods whose capitalization should be normalized\nvar methods = ['DELETE', 'GET', 'HEAD', 'OPTIONS', 'POST', 'PUT']\n\nfunction normalizeMethod(method) {\n  var upcased = method.toUpperCase()\n  return methods.indexOf(upcased) > -1 ? upcased : method\n}\n\nexport function Request(input, options) {\n  options = options || {}\n  var body = options.body\n\n  if (input instanceof Request) {\n    if (input.bodyUsed) {\n      throw new TypeError('Already read')\n    }\n    this.url = input.url\n    this.credentials = input.credentials\n    if (!options.headers) {\n      this.headers = new Headers(input.headers)\n    }\n    this.method = input.method\n    this.mode = input.mode\n    this.signal = input.signal\n    if (!body && input._bodyInit != null) {\n      body = input._bodyInit\n      input.bodyUsed = true\n    }\n  } else {\n    this.url = String(input)\n  }\n\n  this.credentials = options.credentials || this.credentials || 'same-origin'\n  if (options.headers || !this.headers) {\n    this.headers = new Headers(options.headers)\n  }\n  this.method = normalizeMethod(options.method || this.method || 'GET')\n  this.mode = options.mode || this.mode || null\n  this.signal = options.signal || this.signal\n  this.referrer = null\n\n  if ((this.method === 'GET' || this.method === 'HEAD') && body) {\n    throw new TypeError('Body not allowed for GET or HEAD requests')\n  }\n  this._initBody(body)\n}\n\nRequest.prototype.clone = function() {\n  return new Request(this, {body: this._bodyInit})\n}\n\nfunction decode(body) {\n  var form = new FormData()\n  body\n    .trim()\n    .split('&')\n    .forEach(function(bytes) {\n      if (bytes) {\n        var split = bytes.split('=')\n        var name = split.shift().replace(/\\+/g, ' ')\n        var value = split.join('=').replace(/\\+/g, ' ')\n        form.append(decodeURIComponent(name), decodeURIComponent(value))\n      }\n    })\n  return form\n}\n\nfunction parseHeaders(rawHeaders) {\n  var headers = new Headers()\n  // Replace instances of \\r\\n and \\n followed by at least one space or horizontal tab with a space\n  // https://tools.ietf.org/html/rfc7230#section-3.2\n  var preProcessedHeaders = rawHeaders.replace(/\\r?\\n[\\t ]+/g, ' ')\n  preProcessedHeaders.split(/\\r?\\n/).forEach(function(line) {\n    var parts = line.split(':')\n    var key = parts.shift().trim()\n    if (key) {\n      var value = parts.join(':').trim()\n      headers.append(key, value)\n    }\n  })\n  return headers\n}\n\nBody.call(Request.prototype)\n\nexport function Response(bodyInit, options) {\n  if (!options) {\n    options = {}\n  }\n\n  this.type = 'default'\n  this.status = options.status === undefined ? 200 : options.status\n  this.ok = this.status >= 200 && this.status < 300\n  this.statusText = 'statusText' in options ? options.statusText : 'OK'\n  this.headers = new Headers(options.headers)\n  this.url = options.url || ''\n  this._initBody(bodyInit)\n}\n\nBody.call(Response.prototype)\n\nResponse.prototype.clone = function() {\n  return new Response(this._bodyInit, {\n    status: this.status,\n    statusText: this.statusText,\n    headers: new Headers(this.headers),\n    url: this.url\n  })\n}\n\nResponse.error = function() {\n  var response = new Response(null, {status: 0, statusText: ''})\n  response.type = 'error'\n  return response\n}\n\nvar redirectStatuses = [301, 302, 303, 307, 308]\n\nResponse.redirect = function(url, status) {\n  if (redirectStatuses.indexOf(status) === -1) {\n    throw new RangeError('Invalid status code')\n  }\n\n  return new Response(null, {status: status, headers: {location: url}})\n}\n\nexport var DOMException = self.DOMException\ntry {\n  new DOMException()\n} catch (err) {\n  DOMException = function(message, name) {\n    this.message = message\n    this.name = name\n    var error = Error(message)\n    this.stack = error.stack\n  }\n  DOMException.prototype = Object.create(Error.prototype)\n  DOMException.prototype.constructor = DOMException\n}\n\nexport function fetch(input, init) {\n  return new Promise(function(resolve, reject) {\n    var request = new Request(input, init)\n\n    if (request.signal && request.signal.aborted) {\n      return reject(new DOMException('Aborted', 'AbortError'))\n    }\n\n    var xhr = new XMLHttpRequest()\n\n    function abortXhr() {\n      xhr.abort()\n    }\n\n    xhr.onload = function() {\n      var options = {\n        status: xhr.status,\n        statusText: xhr.statusText,\n        headers: parseHeaders(xhr.getAllResponseHeaders() || '')\n      }\n      options.url = 'responseURL' in xhr ? xhr.responseURL : options.headers.get('X-Request-URL')\n      var body = 'response' in xhr ? xhr.response : xhr.responseText\n      resolve(new Response(body, options))\n    }\n\n    xhr.onerror = function() {\n      reject(new TypeError('Network request failed'))\n    }\n\n    xhr.ontimeout = function() {\n      reject(new TypeError('Network request failed'))\n    }\n\n    xhr.onabort = function() {\n      reject(new DOMException('Aborted', 'AbortError'))\n    }\n\n    xhr.open(request.method, request.url, true)\n\n    if (request.credentials === 'include') {\n      xhr.withCredentials = true\n    } else if (request.credentials === 'omit') {\n      xhr.withCredentials = false\n    }\n\n    if ('responseType' in xhr && support.blob) {\n      xhr.responseType = 'blob'\n    }\n\n    request.headers.forEach(function(value, name) {\n      xhr.setRequestHeader(name, value)\n    })\n\n    if (request.signal) {\n      request.signal.addEventListener('abort', abortXhr)\n\n      xhr.onreadystatechange = function() {\n        // DONE (success or failure)\n        if (xhr.readyState === 4) {\n          request.signal.removeEventListener('abort', abortXhr)\n        }\n      }\n    }\n\n    xhr.send(typeof request._bodyInit === 'undefined' ? null : request._bodyInit)\n  })\n}\n\nfetch.polyfill = true\n\nif (!self.fetch) {\n  self.fetch = fetch\n  self.Headers = Headers\n  self.Request = Request\n  self.Response = Response\n}\n"],"sourceRoot":""}